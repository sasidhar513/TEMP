
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;


int main(){
    int n;
    int k;
    cin >> n >> k;
    string number;
    cin >> number;
    int arr[number.length()/2];
    for(int i=0;i<number.length()/2;i++)
        if(number[i]==number[number.length()-1-i])
            arr[i]=1;
        else
            arr[i]=0;
    int rem[number.length()/2];
    for(int i=number.length()/2-1;i>=0;i--)
        if(i+1==number.length()/2)
            rem[i]=0;
        else       
            if(arr[i+1]==0)
                rem[i]=rem[i+1]+1;
            else
                rem[i]=rem[i+1];
    bool is =true;
    for(int i1=0;i1<number.length()/2;i1++)
    {
        //if the digit at that position is 9 and both are equal we wont do anything
        if(arr[i1]==1&&number[i1]==9)
            continue;
        //if digits are same and we have plenty of moves we can convert them to 9
        else if(/*arr[i1]==1&&*/k-2>=rem[i1])
        {
            number=number.substr(0,i1)+"9"+number.substr(i1+1,number.length()-1-1-i1-        i1)+"9"+number.substr(number.length()-i1,number.length());
            k-=2;
        }
        else if (arr[i1]==0&&k-1>=rem[i1])
        {   char change;         
            if(number[i1]>number[number.length()-1-i1])
                change=number[i1];
            else
                change=number[number.length()-1-i1];
         cout<<change<<endl;
             number=number.substr(0,i1)+change+number.substr(i1+1,number.length()-1-1-i1-        i1)+change+number.substr(number.length()-i1,number.length());
         k=k-1;
        }
        else if(arr[i1]==0&&k-1<rem[i1]) 
        {
            is=false;
            break;
        }
            
        cout<<number<<" "<<k<<endl;
       
    }
    if(is)
        cout<<number;
    else
        cout<<"Not possible";
    return 0;
}
