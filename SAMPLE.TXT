#include<bits/stdc++.h>
#define ALPHABET 256
using namespace std;

struct TrieNode{
    TrieNode * nextNode[ALPHABET];
    bool isLeaf;
};
class Trie
{
    TrieNode * rootNode;
    public:
    Trie();
    TrieNode * createTrieNode();
    void  insertKey(string s);
    bool searchKey(string s);   
};
Trie::Trie(){
    rootNode= createTrieNode();
}
TrieNode * Trie::createTrieNode(){
    TrieNode * node;
    for(int i=0;i<ALPHABET;i++)
    {
        node->nextNode[i]=NULL;
    }
    node->isLeaf=false;
    return node;
}
void  Trie::insertKey(string s){
    TrieNode * root =rootNode;
    for(int i=0;i<s.length();i++)
    {
            if(root->nextNode[s[0]]==NULL)
            {
                root->nextNode[s[i]]=createTrieNode();
            }
            else 
                root=root->nextNode[s[i]];
    }
}
bool Trie::searchKey(string s){
    TrieNode * root =rootNode;
    else
}
int main(){
    return 0;
}
