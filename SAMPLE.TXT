#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
void findSquares(int i,int j,char ** arr,int n,int m)
{
    
        
        
}
bool check(int n,int * arr)
{   
        if(arr[n]>=2)
            return false;
        else
            return true;    
}
int main() {
    int n,m;
    cin>>n>>m;
    int plusCounter[min(n/2,m/2)];
    for(int i=0;i<min(n/2,m/2);i++)
        plusCounter[i]=0;
        
    char ** arr;
    int ** MaxPlusPossibleArr;
    arr = new char *[n];
    MaxPlusPossibleArr=new int *[n];
    for(int i = 0; i <n; i++)
        arr[i] = new char[m];
    for(int i = 0; i <n; i++)
        MaxPlusPossibleArr[i] = new int[m];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            cin>>arr[i][j];
            MaxPlusPossibleArr[i][j]=min(min(min(i,n-i-1),j),m-j-1);
            cout<<MaxPlusPossibleArr[i][j]<<" ";
        }
        cout<<endl;
    }
    for(int i=min(n/2,m/2);i>=0;i--)
    {
        //cout<<i<<endl;
    }
    
    
    //findSquares(0,0,ara,n,m);
   
    

   /* 
    
    for(int i=0;i<n;i++)
        minA[i]=0;
    minA[0]=1;
    minA[n-1]=1;
    for(int i=n/2;i<;i++)
    {
        if(check(i,minA))
        {
                    
            for(int j=0;j<m;j++)
            {
                if(arr[i][j]=="G")
                {
                    if(check(j,minA))
                    {
                        int mini=min(min(min(i,n-i-1),j),m-j-1);
                        //cout<<"mini "<<mini<<endl;
                        int left=0,right=0,up=0,down=0;
                        for(int k=1;k<=mini;k++)
                        {
                            //cout<<arr[i][j]<<" "<< arr[i-k][j]<<endl;
                            if(arr[i][j]==arr[i-k][j])
                                up++;
                            else
                                break;
                        }
                        //checking right 
                        for(int k=1;k<=mini;k++)
                        {
                            //cout<<arr[i][j]<<" "<<arr[i+k][j]<<endl;
                            if(arr[i][j]==arr[i+k][j])
                                down++;
                            else 
                                break;
                        }
                        //checking bottom
                        for(int l=1;l<=mini;l++)
                        {
                            //cout<<arr[i][j]<<" "<<arr[i][j+l]<<endl;
                            if(arr[i][j]==arr[i][j+l])
                                right++;
                            else 
                              break; 

                        }
                        //cheking up
                         for(int k=1;k<=mini;k++)
                        {
                            //cout<<arr[i][j]<<" "<<arr[i][j-k]<<endl;
                            if(arr[i][j]==arr[i][j-k])
                                left++;
                             else 
                                 break;
                        }
                        int plus=min(up,min(down,min(left,right)));
                        cout<<i<<" "<<j<<" "<<left<<" "<<right<<" "<<up<<" "<<down<<" "<<plus<<endl;
                        for(int ss=plus;ss>0;ss--)
                            if(minA[ss]==0)
                            {
                                minA[ss]=1;
                                minA[n-ss-1]=1;
                                break;
                            }


                    }
                }

            }
        }
        
    }*/
    return 0;
}
